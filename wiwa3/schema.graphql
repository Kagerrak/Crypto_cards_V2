type Player @entity {
  id: ID! # Player's address
  battles: [Battle!] @derivedFrom(field: "players")
  characters: [Character!] @derivedFrom(field: "owner")
  totalDamageDealt: BigInt!
  totalDamageTaken: BigInt!
}

type Character @entity {
  id: ID! # Character's ID
  owner: Player!
  battles: [Battle!] @derivedFrom(field: "characters")
  totalDamageDealt: BigInt!
  totalDamageTaken: BigInt!
  health: BigInt! # Added based on CharacterProxyData event
  attack: BigInt! # Added based on CharacterProxyData event
  defense: BigInt! # Added based on CharacterProxyData event
  mana: BigInt! # Added based on CharacterProxyData event
  typeId: BigInt! # Added based on CharacterProxyData event
  equippedSkills: [BigInt!] # Added based on CharacterProxyData event
  activeEffectIds: [BigInt!] # Added based on _applyStatusEffect function
  activeEffectDurations: [BigInt!] # Added based on _applyStatusEffect function
}

type Battle @entity {
  id: ID! # Battle's ID
  name: String
  creator: Player
  players: [Player!]
  characters: [Character!]
  status: String!
  winner: Player
  loser: Player
  rounds: [Round!] @derivedFrom(field: "battle")
  totalDamageDealt: BigInt!
  totalDamageTaken: BigInt!
  roundNumber: Int
}

type Round @entity {
  id: ID! # Combination of Battle's ID and round number
  battle: Battle!
  damagedPlayers: [Player!]
  damages: [Damage!] @derivedFrom(field: "round")
  moves: [Move!] @derivedFrom(field: "round")
  statusEffects: [StatusEffect!] @derivedFrom(field: "round")
  diceRoll: BigInt
}

type Move @entity {
  id: ID! # Combination of Battle's ID, round number, and player's address
  round: Round!
  player: Player!
  type: String!
  damageDealt: BigInt
  damageTaken: BigInt
}

type StatusEffect @entity {
  id: ID! # Combination of Battle's ID, round number, and character's address
  round: Round!
  character: Character!
  owner: Player! # Add this field
  effectId: BigInt!
  effectName: String!
  effectType: String!
  effectValue: BigInt!
  duration: BigInt!
}

type Damage @entity {
  id: ID! # Combination of Battle's ID, round number, and player's address
  round: Round!
  player: Player!
  damageDealt: BigInt!
  damageTaken: BigInt!
}
